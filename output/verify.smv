MODULE main
VAR
	state : { s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63, s6Inheritance, s7Inheritance, s1Attributes, s7Attributes, s9Attributes, s25Attributes, s30Attributes, s43Attributes, s52Attributes, s58Attributes, s61Attributes, s44Value, s45Value, s46Value, s48Value, s53Value, s54Value, s55Value, s59Value, s62Value, s11EnumerationLiterals, s17EnumerationLiterals, s1Associations, s7Associations, s25Associations, s43Associations, s58Associations, s49AssociationTargets, s50AssociationTargets, s51AssociationTargets, s60AssociationTargets, s2CardinalityMin, s3CardinalityMin, s4CardinalityMin, s8CardinalityMin, s10CardinalityMin, s26CardinalityMin, s31CardinalityMin, s21CardinalityMin, s22CardinalityMin, s23CardinalityMin, s24CardinalityMin, s2CardinalityMax, s3CardinalityMax, s4CardinalityMax, s8CardinalityMax, s10CardinalityMax, s26CardinalityMax, s31CardinalityMax, s21CardinalityMax, s22CardinalityMax, s23CardinalityMax, s24CardinalityMax, s2Type, s3Type, s4Type, s8Type, s10Type, s26Type, s31Type, s43Instantiation, s44Instantiation, s45Instantiation, s46Instantiation, s49Instantiation, s48Instantiation, s50Instantiation, s51Instantiation, s52Instantiation, s57Instantiation, s53Instantiation, s54Instantiation, s55Instantiation, s58Instantiation, s59Instantiation, s60Instantiation, s63Instantiation};
ASSIGN
	init(state) := s0;
	next(state) := 
		case
			state = s0 : {s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39, s40, s41, s42, s43, s44, s45, s46, s47, s48, s49, s50, s51, s52, s53, s54, s55, s56, s57, s58, s59, s60, s61, s62, s63};
			state = s1 : {s1Attributes, s1Associations};
			state = s2 : {s2CardinalityMin, s2CardinalityMax, s2Type};
			state = s3 : {s3CardinalityMin, s3CardinalityMax, s3Type};
			state = s4 : {s4CardinalityMin, s4CardinalityMax, s4Type};
			state = s5 : {s5};
			state = s6 : {s6Inheritance};
			state = s7 : {s7Inheritance, s7Attributes, s7Associations};
			state = s8 : {s8CardinalityMin, s8CardinalityMax, s8Type};
			state = s9 : {s9Attributes};
			state = s10 : {s10CardinalityMin, s10CardinalityMax, s10Type};
			state = s11 : {s11EnumerationLiterals};
			state = s12 : {s12};
			state = s13 : {s13};
			state = s14 : {s14};
			state = s15 : {s15};
			state = s16 : {s16};
			state = s17 : {s17EnumerationLiterals};
			state = s18 : {s18};
			state = s19 : {s19};
			state = s20 : {s20};
			state = s21 : {s21CardinalityMin, s21CardinalityMax};
			state = s22 : {s22CardinalityMin, s22CardinalityMax};
			state = s23 : {s23CardinalityMin, s23CardinalityMax};
			state = s24 : {s24CardinalityMin, s24CardinalityMax};
			state = s25 : {s25Attributes, s25Associations};
			state = s26 : {s26CardinalityMin, s26CardinalityMax, s26Type};
			state = s27 : {s27};
			state = s28 : {s28};
			state = s29 : {s29};
			state = s30 : {s30Attributes};
			state = s31 : {s31CardinalityMin, s31CardinalityMax, s31Type};
			state = s32 : {s32};
			state = s33 : {s33};
			state = s34 : {s34};
			state = s35 : {s35};
			state = s36 : {s36};
			state = s37 : {s37};
			state = s38 : {s38};
			state = s39 : {s39};
			state = s40 : {s40};
			state = s41 : {s41};
			state = s42 : {s42};
			state = s43 : {s43Attributes, s43Associations, s43Instantiation};
			state = s44 : {s44Value, s44Instantiation};
			state = s45 : {s45Value, s45Instantiation};
			state = s46 : {s46Value, s46Instantiation};
			state = s47 : {s47};
			state = s48 : {s48Value, s48Instantiation};
			state = s49 : {s49AssociationTargets, s49Instantiation};
			state = s50 : {s50AssociationTargets, s50Instantiation};
			state = s51 : {s51AssociationTargets, s51Instantiation};
			state = s52 : {s52Attributes, s52Instantiation};
			state = s53 : {s53Value, s53Instantiation};
			state = s54 : {s54Value, s54Instantiation};
			state = s55 : {s55Value, s55Instantiation};
			state = s56 : {s56};
			state = s57 : {s57Instantiation};
			state = s58 : {s58Attributes, s58Associations, s58Instantiation};
			state = s59 : {s59Value, s59Instantiation};
			state = s60 : {s60AssociationTargets, s60Instantiation};
			state = s61 : {s61Attributes};
			state = s62 : {s62Value};
			state = s63 : {s63Instantiation};
			state = s6Inheritance : {s1};
			state = s7Inheritance : {s1};
			state = s1Attributes : {s2, s3, s4};
			state = s7Attributes : {s8};
			state = s9Attributes : {s10};
			state = s25Attributes : {s26};
			state = s30Attributes : {s31};
			state = s43Attributes : {s44, s45, s46, s48};
			state = s52Attributes : {s53, s54, s55};
			state = s58Attributes : {s59};
			state = s61Attributes : {s62};
			state = s44Value : {s33};
			state = s45Value : {s34};
			state = s46Value : {s18};
			state = s48Value : {s37};
			state = s53Value : {s35};
			state = s54Value : {s36};
			state = s55Value : {s18};
			state = s59Value : {s38};
			state = s62Value : {s12};
			state = s11EnumerationLiterals : {s12, s13, s14, s15, s16};
			state = s17EnumerationLiterals : {s18, s19, s20};
			state = s1Associations : {s21};
			state = s7Associations : {s22, s23};
			state = s25Associations : {s24};
			state = s43Associations : {s49, s50, s51};
			state = s58Associations : {s60};
			state = s49AssociationTargets : {s61};
			state = s50AssociationTargets : {s52};
			state = s51AssociationTargets : {s58};
			state = s60AssociationTargets : {s63};
			state = s2CardinalityMin : {s34};
			state = s3CardinalityMin : {s34};
			state = s4CardinalityMin : {s34};
			state = s8CardinalityMin : {s34};
			state = s10CardinalityMin : {s34};
			state = s26CardinalityMin : {s34};
			state = s31CardinalityMin : {s34};
			state = s21CardinalityMin : {s34};
			state = s22CardinalityMin : {s34};
			state = s23CardinalityMin : {s36};
			state = s24CardinalityMin : {s36};
			state = s2CardinalityMax : {s34};
			state = s3CardinalityMax : {s34};
			state = s4CardinalityMax : {s34};
			state = s8CardinalityMax : {s34};
			state = s10CardinalityMax : {s34};
			state = s26CardinalityMax : {s34};
			state = s31CardinalityMax : {s34};
			state = s21CardinalityMax : {s39};
			state = s22CardinalityMax : {s39};
			state = s23CardinalityMax : {s39};
			state = s24CardinalityMax : {s34};
			state = s2Type : {s40};
			state = s3Type : {s41};
			state = s4Type : {s17};
			state = s8Type : {s42};
			state = s10Type : {s11};
			state = s26Type : {s42};
			state = s31Type : {s40};
			state = s43Instantiation : {s7};
			state = s44Instantiation : {s2};
			state = s45Instantiation : {s3};
			state = s46Instantiation : {s4};
			state = s49Instantiation : {s21};
			state = s48Instantiation : {s8};
			state = s50Instantiation : {s23};
			state = s51Instantiation : {s22};
			state = s52Instantiation : {s6};
			state = s57Instantiation : {s21};
			state = s53Instantiation : {s2};
			state = s54Instantiation : {s3};
			state = s55Instantiation : {s4};
			state = s58Instantiation : {s27};
			state = s59Instantiation : {s26};
			state = s60Instantiation : {s24};
			state = s63Instantiation : {s32};
		esac;
DEFINE
	InitialState := state = s0;
	PhysicalPerson := state = s1;
	PhysicalPerson.birthYear := state = s2;
	PhysicalPerson.disabilityRate := state = s3;
	PhysicalPerson.disabilityType := state = s4;
	PhysicalPerson.getAge := state = s5;
	Child := state = s6;
	TaxPayer := state = s7;
	TaxPayer.isResident := state = s8;
	Address := state = s9;
	Address.country := state = s10;
	Country := state = s11;
	Country.LU := state = s12;
	Country.FR := state = s13;
	Country.BE := state = s14;
	Country.DE := state = s15;
	Country.OTHER := state = s16;
	Disability := state = s17;
	Disability.None := state = s18;
	Disability.Vision := state = s19;
	Disability._A := state = s20;
	PhysicalPerson.addresses := state = s21;
	TaxPayer.incomes := state = s22;
	TaxPayer.children := state = s23;
	Income.taxCard := state = s24;
	Income := state = s25;
	Income.isLocal := state = s26;
	Pension := state = s27;
	Employment := state = s28;
	Other := state = s29;
	Constants := state = s30;
	Constants.YEAR := state = s31;
	TaxCard := state = s32;
	Literal_1984 := state = s33;
	Literal_1.0 := state = s34;
	Literal_2010 := state = s35;
	Literal_0.0 := state = s36;
	Literal_false := state = s37;
	Literal_true := state = s38;
	Literal_Star := state = s39;
	Literal_Integer := state = s40;
	Literal_Real := state = s41;
	Literal_Boolean := state = s42;
	TaxPayer_1 := state = s43;
	TaxPayer_1.birthYear := state = s44;
	TaxPayer_1.disabilityRate := state = s45;
	TaxPayer_1.disabilityType := state = s46;
	TaxPayer_1.getAge := state = s47;
	TaxPayer_1.isResident := state = s48;
	TaxPayer_1.addresses := state = s49;
	TaxPayer_1.children := state = s50;
	TaxPayer_1.incomes := state = s51;
	Child_1 := state = s52;
	Child_1.birthYear := state = s53;
	Child_1.disabilityRate := state = s54;
	Child_1.disabilityType := state = s55;
	Child_1.getAge := state = s56;
	Child_1.addresses := state = s57;
	Pension_1 := state = s58;
	Pension_1.isLocal := state = s59;
	Pension_1.taxCard := state = s60;
	Address_1 := state = s61;
	Address_1.country := state = s62;
	TaxCard_1 := state = s63;
	Inheritance := state = s6Inheritance | state = s7Inheritance;
	Attributes := state = s1Attributes | state = s7Attributes | state = s9Attributes | state = s25Attributes | state = s30Attributes | state = s43Attributes | state = s52Attributes | state = s58Attributes | state = s61Attributes;
	Value := state = s44Value | state = s45Value | state = s46Value | state = s48Value | state = s53Value | state = s54Value | state = s55Value | state = s59Value | state = s62Value;
	EnumerationLiterals := state = s11EnumerationLiterals | state = s17EnumerationLiterals;
	Associations := state = s1Associations | state = s7Associations | state = s25Associations | state = s43Associations | state = s58Associations;
	AssociationTargets := state = s49AssociationTargets | state = s50AssociationTargets | state = s51AssociationTargets | state = s60AssociationTargets;
	CardinalityMin := state = s2CardinalityMin | state = s3CardinalityMin | state = s4CardinalityMin | state = s8CardinalityMin | state = s10CardinalityMin | state = s26CardinalityMin | state = s31CardinalityMin | state = s21CardinalityMin | state = s22CardinalityMin | state = s23CardinalityMin | state = s24CardinalityMin;
	CardinalityMax := state = s2CardinalityMax | state = s3CardinalityMax | state = s4CardinalityMax | state = s8CardinalityMax | state = s10CardinalityMax | state = s26CardinalityMax | state = s31CardinalityMax | state = s21CardinalityMax | state = s22CardinalityMax | state = s23CardinalityMax | state = s24CardinalityMax;
	Type := state = s2Type | state = s3Type | state = s4Type | state = s8Type | state = s10Type | state = s26Type | state = s31Type;
	Instantiation := state = s43Instantiation | state = s44Instantiation | state = s45Instantiation | state = s46Instantiation | state = s49Instantiation | state = s48Instantiation | state = s50Instantiation | state = s51Instantiation | state = s52Instantiation | state = s57Instantiation | state = s53Instantiation | state = s54Instantiation | state = s55Instantiation | state = s58Instantiation | state = s59Instantiation | state = s60Instantiation | state = s63Instantiation;
SPEC
AG ( (!InitialState & !TaxPayer & EX (Instantiation & EX PhysicalPerson) | EX (Instantiation & E[(!Instantiation & !Attributes & !Value & !EnumerationLiterals & !Associations & !AssociationTargets & !CardinalityMin & !CardinalityMax & !Type) U (PhysicalPerson)])) -> (EX (Attributes & ( EX (EX (Instantiation & EX PhysicalPerson.disabilityType) & EX Value & EX Disability.None    )     ) -> EX (EX (Instantiation & EX PhysicalPerson.disabilityRate) & EX Value & EX Literal_0.0 )) ) ) ;
SPEC
AG ( (!InitialState & !TaxPayer & EX (Instantiation & EX TaxPayer) | EX (Instantiation & E[(!Instantiation & !Attributes & !Value & !EnumerationLiterals & !Associations & !AssociationTargets & !CardinalityMin & !CardinalityMax & !Type) U (TaxPayer)])  ) -> !((( EX (Associations & AX( (EX (Instantiation & EX PhysicalPerson.addresses)) -> EX (AssociationTargets & AX EX Value & !EX Country.LU)))) -> EX Attributes & EX ((EX (Instantiation & EX TaxPayer.isResident)) & EX Value & EX Literal_true))));
SPEC
AG ( ( !InitialState & !TaxPayer & EX (Instantiation & EX TaxPayer) | EX (Instantiation & E[(!Instantiation & !Attributes & !Value & !EnumerationLiterals & !Associations & !AssociationTargets & !CardinalityMin & !CardinalityMax & !Type) U (TaxPayer)]) ) -> (( (EX (Associations & EX (EX (Instantiation & EX TaxPayer.incomes) & EX EX (Attributes & EX (EX (Instantiation & EX Income.isLocal) & EX Value & EX Literal_true))))) & !(EX (Associations & EX (EX (Instantiation & EX PhysicalPerson.addresses) & EX EX (Attributes & EX (EX (Instantiation & EX Address.country) & EX Value & EX Country.LU ))))) ) -> EX (Attributes & EX (EX (Instantiation & EX TaxPayer.isResident) & EX Value & EX Literal_false )))   );
SPEC
AG ((EX (Instantiation & EX Other) -> (!EX(Associations & EX EX (Instantiation & EX Income.taxCard)))) & ( (EX (Instantiation & EX Income) | EX (Instantiation & E[(!Instantiation & !Attributes & !Value & !EnumerationLiterals & !Associations & !AssociationTargets & !CardinalityMin & !CardinalityMax & !Type) U (Income)]) &!EX (Instantiation & EX Other)) -> EX (Associations & EX EX (Instantiation & EX Income.taxCard)) )   );
